# ***** BEGIN LICENSE BLOCK *****
# Copyright 2011, 2012 CZ.NIC, z.s.p.o.
#
# Authors: Martin Straka <martin.straka@nic.cz>
#
# This file is part of DNSSEC Validator Add-on.
#
# DNSSEC Validator Add-on is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# DNSSEC Validator Add-on is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# DNSSEC Validator Add-on.  If not, see <http://www.gnu.org/licenses/>.
# ***** END LICENSE BLOCK *****


PLUGIN_ROOT = .
PLUGIN_SRC_DIR = $(PLUGIN_ROOT)/plugin-source
PLUGIN_TMP = $(PLUGIN_ROOT)/dll_build
PLUGIN_LIB_DEST = $(PLUGIN_ROOT)/plugins-lib
PLUGIN_NAME_DNSSEC = DNSSECValidatorPlugin
PLUGIN_NAME_TLSA = TLSAValidatorPlugin
PLUGIN_NAME_DNSSEC_LIB = libDNSSECcore-windows-x86.dll
PLUGIN_NAME_TLSA_LIB = libDANEcore-windows-x86.dll
PLUGIN_NAME_DNSSEC_EXE = DNSSECcore-windows-x86.exe
PLUGIN_NAME_TLSA_EXE = DANEcore-windows-x86.exe
PLUGIN_NAME_DNSSEC_DEF = libDNSSECcore-windows-x86.def
PLUGIN_NAME_TLSA_DEF = libDANEcore-windows-x86.def
PLUGIN_NAME_DNSSEC = DNSSECValidatorPlugin
PLUGIN_NAME_TLSA = TLSAValidatorPlugin
PLUGIN_NAME_LIB = libwin
PLUGIN_ADD_ON = packages
ADDON_PATH_FF = add-on/firefox
ADDON_PATH_CR = add-on/chrome2dnssec
ADDON_PATH_CR_TLSA = add-on/chrome2tlsa
ADDON_PATH_OP_DNSSEC = add-on/opera2dnssec
ADDON_PATH_OP_TLSA = add-on/opera2tlsa
#EXTENSION_VERSION = $(shell cat add-on/firefox/common/install.rdf.template | sed -n 's/.*<em:version>\(.*\)<\/em:version>.*/\1/p')
EXTENSION_VERSION = $(shell cat Version)
EXTENSION_VERSION_CR = $(shell cut -c 1-5 Version)

X86_MINGW_CC = i586-mingw32msvc-gcc
X86_MINGW_STRIP = i586-mingw32msvc-strip

LIBS_BUILT_DIR = libs-win

COMMON_INCLUDE = $(PLUGIN_SRC_DIR)/common
OPENSSL_INCLUDE = $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/openssl/include
LDNS_INCLUDE = $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/ldns/include
UNBOUND_INCLUDE = $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/unbound/include

#all: sys_windows_pre xpi_x86

DEFINE_FLAGS = -DCA_STORE=WIN_CA_STORE -DTGT_SYSTEM=TGT_WIN -D__USE_MINGW_ANSI_STDIO=1
CPPFLAGS = $(DEFINE_FLAGS)
INCLUDE_FLAGS = -I$(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86 -I$(LDNS_INCLUDE) -I$(UNBOUND_INCLUDE) -I$(OPENSSL_INCLUDE) -I$(COMMON_INCLUDE)
CFLAGS = -Wall -fPIC $(INCLUDE_FLAGS)
LDFLAGS = -shared

.PHONY: all clean sys_windiows_all xpi_x86

all: clean sys_windows_all

$(PLUGIN_LIB_DEST):
	mkdir $(PLUGIN_LIB_DEST)

$(PLUGIN_TMP):
	mkdir $@ 

$(PLUGIN_TMP)/common.o: $(PLUGIN_SRC_DIR)/common/common.c $(PLUGIN_TMP)
	$(X86_MINGW_CC) -o $@ -c $< $(CPPFLAGS) $(CFLAGS)

$(PLUGIN_TMP)/log_dflt.o: $(PLUGIN_SRC_DIR)/common/log_dflt.c $(PLUGIN_TMP)
	$(X86_MINGW_CC) -o $@ -c $< $(CPPFLAGS) $(CFLAGS)

$(PLUGIN_TMP)/dnssec-plug.o: $(PLUGIN_SRC_DIR)/$(PLUGIN_NAME_DNSSEC)/dnssec-plug.c $(PLUGIN_TMP)
	$(X86_MINGW_CC) -o $@ -c $< $(CPPFLAGS) $(CFLAGS)

$(PLUGIN_TMP)/ca_store_win.o: $(PLUGIN_SRC_DIR)/$(PLUGIN_NAME_TLSA)/ca_store_win.c $(PLUGIN_TMP)
	$(X86_MINGW_CC) -o $@ -c $< $(CPPFLAGS) $(CFLAGS) -I$(PLUGIN_SRC_DIR)/$(PLUGIN_NAME_TLSA)

$(PLUGIN_TMP)/dane-plug.o: $(PLUGIN_SRC_DIR)/$(PLUGIN_NAME_TLSA)/dane-plug.c $(PLUGIN_TMP)
	$(X86_MINGW_CC) -o $@ -c $< $(CPPFLAGS) $(CFLAGS)

$(PLUGIN_TMP)/$(PLUGIN_NAME_DNSSEC_LIB): $(PLUGIN_TMP)/common.o $(PLUGIN_TMP)/log_dflt.o $(PLUGIN_TMP)/dnssec-plug.o
	$(X86_MINGW_CC) -shared -o $@ $^ $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libunbound.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libldns.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libssl.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libcrypto.a -Wl,--output-def,$(PLUGIN_TMP)/$(PLUGIN_NAME_DNSSEC_DEF),-Bstatic,-Bsymbolic,-lws2_32,-liphlpapi,-lgdi32
	$(X86_MINGW_STRIP) -x -S $(PLUGIN_TMP)/$(PLUGIN_NAME_DNSSEC_LIB)

$(PLUGIN_TMP)/$(PLUGIN_NAME_TLSA_LIB): $(PLUGIN_TMP)/common.o $(PLUGIN_TMP)/log_dflt.o $(PLUGIN_TMP)/dane-plug.o $(PLUGIN_TMP)/ca_store_win.o
	$(X86_MINGW_CC) -shared -o $@ $^ $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libunbound.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libldns.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libssl.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libcrypto.a -Wl,--output-def,$(PLUGIN_TMP)/$(PLUGIN_NAME_TLSA_DEF),-Bstatic,-Bsymbolic,-lws2_32,-liphlpapi,-lgdi32,-lcrypt32
	$(X86_MINGW_STRIP) -x -S $(PLUGIN_TMP)/$(PLUGIN_NAME_TLSA_LIB)

$(PLUGIN_TMP)/dnssec-plug_main.o: $(PLUGIN_SRC_DIR)/$(PLUGIN_NAME_DNSSEC)/dnssec-plug.c $(PLUGIN_TMP)
	$(X86_MINGW_CC) -o $@ -c $< $(CPPFLAGS) -DCMNDLINE_TEST $(CFLAGS)

$(PLUGIN_TMP)/dane-plug_main.o: $(PLUGIN_SRC_DIR)/$(PLUGIN_NAME_TLSA)/dane-plug.c $(PLUGIN_TMP)
	$(X86_MINGW_CC) -o $@ -c $< $(CPPFLAGS) -DCMNDLINE_TEST $(CFLAGS)

$(PLUGIN_TMP)/$(PLUGIN_NAME_DNSSEC_EXE): $(PLUGIN_TMP)/common.o $(PLUGIN_TMP)/log_dflt.o $(PLUGIN_TMP)/dnssec-plug_main.o
	$(X86_MINGW_CC) -o $@ $^ $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libunbound.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libldns.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libssl.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libcrypto.a -Wl,-Bstatic,-Bsymbolic,-lws2_32,-liphlpapi,-lgdi32
	$(X86_MINGW_STRIP) -x -S $(PLUGIN_TMP)/$(PLUGIN_NAME_DNSSEC_EXE)

$(PLUGIN_TMP)/$(PLUGIN_NAME_TLSA_EXE): $(PLUGIN_TMP)/common.o $(PLUGIN_TMP)/log_dflt.o $(PLUGIN_TMP)/dane-plug_main.o $(PLUGIN_TMP)/ca_store_win.o
	$(X86_MINGW_CC) -o $@ $^ $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libunbound.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libldns.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libssl.a $(PLUGIN_ROOT)/$(LIBS_BUILT_DIR)/windows/x86/libcrypto.a -Wl,-Bstatic,-Bsymbolic,-lws2_32,-liphlpapi,-lgdi32,-lcrypt32
	$(X86_MINGW_STRIP) -x -S $(PLUGIN_TMP)/$(PLUGIN_NAME_TLSA_EXE)
#:
#	$(X86_MINGW_CC) -c $< -o $@ $(CPPFLAGS) $(CFLAGS)

sys_windows_all: $(PLUGIN_TMP)/$(PLUGIN_NAME_DNSSEC_LIB) $(PLUGIN_TMP)/$(PLUGIN_NAME_TLSA_LIB) $(PLUGIN_TMP)/$(PLUGIN_NAME_DNSSEC_EXE) $(PLUGIN_TMP)/$(PLUGIN_NAME_TLSA_EXE) $(PLUGIN_LIB_DEST)
	cp $(PLUGIN_TMP)/$(PLUGIN_NAME_DNSSEC_LIB) $(PLUGIN_LIB_DEST)
	cp $(PLUGIN_TMP)/$(PLUGIN_NAME_TLSA_LIB) $(PLUGIN_LIB_DEST)
	cp $(PLUGIN_TMP)/$(PLUGIN_NAME_DNSSEC_EXE) $(PLUGIN_LIB_DEST)
	cp $(PLUGIN_TMP)/$(PLUGIN_NAME_TLSA_EXE) $(PLUGIN_LIB_DEST)
	cp $(PLUGIN_TMP)/$(PLUGIN_NAME_DNSSEC_DEF) $(PLUGIN_LIB_DEST)
	cp $(PLUGIN_TMP)/$(PLUGIN_NAME_TLSA_DEF) $(PLUGIN_LIB_DEST)
	rm -rf $(PLUGIN_TMP)
	@echo '### Done creating plugin dll for Windows x86. ###'

xpi_x86:
	@echo '### Creating js-ctypes package for Firefox $(OSNAME) x86... ###'
	rm -rf $(ADDON_PATH_FF)/js-ctypes_built
	mkdir $(ADDON_PATH_FF)/js-ctypes_built
	mkdir $(ADDON_PATH_FF)/js-ctypes_built/plugins
	cp -r $(ADDON_PATH_FF)/js-ctypes/* $(ADDON_PATH_FF)/js-ctypes_built
	cp -r $(ADDON_PATH_FF)/common/* $(ADDON_PATH_FF)/js-ctypes_built
	chmod 777 $(ADDON_PATH_FF)/js-ctypes_built/build.sh
	cp $(PLUGIN_LIB_DEST)/$(PLUGIN_NAME_DNSSEC_LIB) $(ADDON_PATH_FF)/js-ctypes_built/plugins
	cp $(PLUGIN_LIB_DEST)/$(PLUGIN_NAME_TLSA_LIB) $(ADDON_PATH_FF)/js-ctypes_built/plugins
	sed -e 's/<em:version><\/em:version>/<em:version>$(EXTENSION_VERSION)<\/em:version>/g' -e 's/<em:targetPlatform><\/em:targetPlatform>/<em:targetPlatform>WINNT_x86-msvc<\/em:targetPlatform>/g' $(ADDON_PATH_FF)/js-ctypes_built/install.rdf.template > $(ADDON_PATH_FF)/js-ctypes_built/install.rdfx
	grep -v optionsURL $(ADDON_PATH_FF)/js-ctypes_built/install.rdfx > $(ADDON_PATH_FF)/js-ctypes_built/install.rdf
	rm $(ADDON_PATH_FF)/js-ctypes_built/install.rdfx
	sed -e 's/xversionx/$(EXTENSION_VERSION)/g' $(ADDON_PATH_FF)/js-ctypes_built/about.template > $(ADDON_PATH_FF)/js-ctypes_built/content/about.xul
	if [ ! -d "$(PLUGIN_ADD_ON)" ]; then mkdir $(PLUGIN_ADD_ON); fi
	cd $(ADDON_PATH_FF)/js-ctypes_built && ./build.sh && mv dnssec.xpi ../../../$(PLUGIN_ADD_ON)/MF-dnssec-tlsa_validator-$(EXTENSION_VERSION)-windows-x86-js-ctypes.xpi
	@echo '### DONE... ###'
	@echo '--------------------------------------------------'
	@echo '### Creating NPAPI packages for Firefox windows x86... ###'
	rm -rf $(ADDON_PATH_FF)/npapi_built
	mkdir $(ADDON_PATH_FF)/npapi_built
	mkdir $(ADDON_PATH_FF)/npapi_built/plugins
	cp -r $(ADDON_PATH_FF)/npapi/* $(ADDON_PATH_FF)/npapi_built
	cp -r $(ADDON_PATH_FF)/common/* $(ADDON_PATH_FF)/npapi_built
	cp $(PLUGIN_LIB_DEST)/$(PLUGIN_NAME_DNSSEC_LIB) $(ADDON_PATH_FF)/npapi_built/plugins
	cp $(PLUGIN_LIB_DEST)/$(PLUGIN_NAME_TLSA_LIB) $(ADDON_PATH_FF)/npapi_built/plugins
	cp $(PLUGIN_LIB_DEST)/np$(PLUGIN_NAME_DNSSEC).dll $(ADDON_PATH_FF)/npapi_built/plugins
	cp $(PLUGIN_LIB_DEST)/np$(PLUGIN_NAME_TLSA).dll $(ADDON_PATH_FF)/npapi_built/plugins
	sed -e 's/<em:version><\/em:version>/<em:version>$(EXTENSION_VERSION)<\/em:version>/g' -e 's/<em:targetPlatform><\/em:targetPlatform>/<em:targetPlatform>WINNT_x86-msvc<\/em:targetPlatform>/g' $(ADDON_PATH_FF)/npapi_built/install.rdf.template > $(ADDON_PATH_FF)/npapi_built/install.rdf
	sed -e 's/xversionx/$(EXTENSION_VERSION)/g' $(ADDON_PATH_FF)/npapi_built/about.template > $(ADDON_PATH_FF)/npapi_built/content/about.xul
	if [ ! -d "$(PLUGIN_ADD_ON)" ]; then mkdir $(PLUGIN_ADD_ON); fi
	cd $(ADDON_PATH_FF)/npapi_built && ./build.sh && mv dnssec.xpi ../../../$(PLUGIN_ADD_ON)/MF-dnssec-tlsa_validator-$(EXTENSION_VERSION)-windows-x86-npapi.xpi
	@echo '### DONE... ###'
	@echo '--------------------------------------------------'
	@echo '### Creating package for Chrome windows x86... ###'
	cp $(PLUGIN_LIB_DEST)/$(PLUGIN_NAME_DNSSEC_LIB) $(ADDON_PATH_CR)
	cp $(PLUGIN_LIB_DEST)/$(PLUGIN_NAME_TLSA_LIB) $(ADDON_PATH_CR_TLSA)
	cp $(PLUGIN_LIB_DEST)/np$(PLUGIN_NAME_DNSSEC).dll $(ADDON_PATH_CR)
	cp $(PLUGIN_LIB_DEST)/np$(PLUGIN_NAME_TLSA).dll $(ADDON_PATH_CR_TLSA)
	sed -e 's/dnssecplugin/np$(PLUGIN_NAME_DNSSEC).dll/g' -e 's/version-of-add-on/$(EXTENSION_VERSION_CR)/g' $(ADDON_PATH_CR)/manifest.json.template > $(ADDON_PATH_CR)/manifest.json
	sed -e 's/tlsaplugin/np$(PLUGIN_NAME_TLSA).dll/g' -e 's/version-of-add-on/$(EXTENSION_VERSION_CR)/g' $(ADDON_PATH_CR_TLSA)/manifest.json.template > $(ADDON_PATH_CR_TLSA)/manifest.json
	cd add-on && tar -czf CR-dnssec_validator-$(EXTENSION_VERSION)-windows-x86.tar.gz chrome2dnssec && mv CR-dnssec_validator-$(EXTENSION_VERSION)-windows-x86.tar.gz ../$(PLUGIN_ADD_ON)
	cd add-on && tar -czf CR-tlsa_validator-$(EXTENSION_VERSION)-windows-x86.tar.gz chrome2tlsa && mv CR-tlsa_validator-$(EXTENSION_VERSION)-windows-x86.tar.gz ../$(PLUGIN_ADD_ON)
	cd $(ADDON_PATH_CR) && rm -rf np$(PLUGIN_NAME_DNSSEC).dll manifest.json $(PLUGIN_NAME_DNSSEC_LIB)
	cd $(ADDON_PATH_CR_TLSA) && rm -rf manifest.json np$(PLUGIN_NAME_TLSA).dll $(PLUGIN_NAME_TLSA_LIB)
	@echo '### DONE... ###'
	@echo '--------------------------------------------------'
	@echo '### Creating package for Opera windows x86... ###'
	cp $(PLUGIN_LIB_DEST)/$(PLUGIN_NAME_DNSSEC_LIB) $(ADDON_PATH_OP_DNSSEC)
	cp $(PLUGIN_LIB_DEST)/$(PLUGIN_NAME_TLSA_LIB) $(ADDON_PATH_OP_TLSA)
	cp $(PLUGIN_LIB_DEST)/np$(PLUGIN_NAME_DNSSEC).dll $(ADDON_PATH_OP_DNSSEC)
	cp $(PLUGIN_LIB_DEST)/np$(PLUGIN_NAME_TLSA).dll $(ADDON_PATH_OP_TLSA)
	sed -e 's/dnssecplugin/np$(PLUGIN_NAME_DNSSEC).dll/g' -e 's/version-of-add-on/$(EXTENSION_VERSION_CR)/g' $(ADDON_PATH_OP_DNSSEC)/manifest.json.template > $(ADDON_PATH_OP_DNSSEC)/manifest.json
	sed -e 's/tlsaplugin/np$(PLUGIN_NAME_TLSA).dll/g' -e 's/version-of-add-on/$(EXTENSION_VERSION_CR)/g' $(ADDON_PATH_OP_TLSA)/manifest.json.template > $(ADDON_PATH_OP_TLSA)/manifest.json
	cd add-on && tar -czf OP-dnssec_validator-$(EXTENSION_VERSION)-windows-x86.tar.gz opera2dnssec && mv OP-dnssec_validator-$(EXTENSION_VERSION)-windows-x86.tar.gz ../$(PLUGIN_ADD_ON)
	cd add-on && tar -czf OP-tlsa_validator-$(EXTENSION_VERSION)-windows-x86.tar.gz opera2tlsa && mv OP-tlsa_validator-$(EXTENSION_VERSION)-windows-x86.tar.gz ../$(PLUGIN_ADD_ON)
	cd $(ADDON_PATH_OP_DNSSEC) && rm -rf np$(PLUGIN_NAME_DNSSEC).dll manifest.json $(PLUGIN_NAME_DNSSEC_LIB)
	cd $(ADDON_PATH_OP_TLSA) && rm -rf manifest.json np$(PLUGIN_NAME_TLSA).dll $(PLUGIN_NAME_TLSA_LIB)
	@echo '### DONE... ###'

clean:
	rm -rf  $(PLUGIN_TMP)
