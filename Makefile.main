.PHONY: all clean download-git-firebreath scour plugin

all: download-git-firebreath plugin

CFLAGS=-fPIC
export CFLAGS

# Sets location variables.
include Makefile.layout

# Different NPAPI plugin names based on OS
# PLUGIN_BINARY_TREE is necessary because Mac has dirtree structure instead of
# a single file.
MAKE_CMD ?= make
OSNAME ?= UNIX
OSNAME_LC ?= unix
HWARCH = default
CORE_TGT = sys_unknown
XPI_TGT = xpi_unknown
ifeq ($(OS_TARGET),UNIX)
  MAKE_OS := Makefile.unix
  ifeq ($(BUILD_64BIT),1)
    HWARCH = x64
    CORE_TGT := sys_$(OSNAME_LC)_$(HWARCH)
    XPI_TGT = xpi_$(HWARCH)
    CFLAGS = -m64
  else
    HWARCH = x86
    CORE_TGT := sys_$(OSNAME_LC)_$(HWARCH)
    XPI_TGT = xpi_$(HWARCH)
    CFLAGS = -m32
  endif
endif
ifeq ($(OS_TARGET),MAC)
  MAKE_OS := Makefile.mac
  ifeq ($(BUILD_MAC96),1)
    CORE_TGT := sys_macosx
    XPI_TGT := xpi
    CFLAGS = -arch i386 -arch x86_64
  else	
    ifeq ($(BUILD_64BIT),1)
      HWARCH = x64
      CORE_TGT := sys_macosx_$(HWARCH)
      XPI_TGT = xpi_$(HWARCH)
      CFLAGS = -m64 -arch x86_64
    else
      HWARCH = x86
      CORE_TGT := sys_macosx_$(HWARCH)
      XPI_TGT = xpi_$(HWARCH)
      CFLAGS = -m32 -arch i386
    endif 
  endif 
endif
ifeq ($(OS_TARGET),WINDOWS)
  MAKE_OS := Makefile.win
  HWARCH = x86
  CORE_TGT := sys_windows_$(HWARCH)
  XPI_TGT = xpi_$(HWARCH)
endif

## uncomment to make plug-in build verbose - shows gcc invocations etc.
#PLUGIN_VERBOSE_BUILD = VERBOSE=1

## Configuration is one of Debug, Release, MinSizeRel and RelWithDebInfo.
## You need to run 'make prepmake' after changing.
PLUGIN_CONFIGURATION ?= MinSizeRel

download-git-firebreath:
	rm -rf $(FIREBREATH_DIR)
	git clone https://github.com/firebreath/FireBreath.git $(FIREBREATH_DIR)
	cd $(FIREBREATH_DIR); git reset --hard 66af0df36be98e9fcf7ee196fe5c275e54752ae8; cd .. # 2014-06-24 17:48:14
	#git reset --hard origin/master
	cd ..
	git submodule update --init --recursive
	#(cd $(FIREBREATH_DIR) && git checkout $(FIREBREATH_TAG))

# Build the plug-in.
plugin:
	CFLAGS="$(CFLAGS)" $(MAKE_CMD) -f Makefile.static_libs OPENSSL_ARGS="$(OPENSSL_ARGS)" CONFIGURE_ARGS="$(CONFIGURE_ARGS)" OSNAME=$(OSNAME) OSNAME_LC=$(OSNAME_LC) HWARCH=$(HWARCH) MAKE_CMD=$(MAKE_CMD) STATIC_LINKING=$(STATIC_LINKING)
	CFLAGS="$(CFLAGS)" $(MAKE_CMD) -f $(MAKE_OS) OSNAME=$(OSNAME) OSNAME_LC=$(OSNAME_LC) HWARCH=$(HWARCH) MAKE_CMD=$(MAKE_CMD) INCLUDE_LOC=$(INCLUDE_LOC) LIBRARY_LOC=$(LIBRARY_LOC) STATIC_LINKING=$(STATIC_LINKING) $(CORE_TGT)
	CFLAGS="$(CFLAGS)" $(MAKE_CMD) -f $(MAKE_OS) OSNAME=$(OSNAME) OSNAME_LC=$(OSNAME_LC) HWARCH=$(HWARCH) MAKE_CMD=$(MAKE_CMD) INCLUDE_LOC=$(INCLUDE_LOC) LIBRARY_LOC=$(LIBRARY_LOC) $(XPI_TGT)

# Cleans built files.
clean:
	$(MAKE_CMD) -f Makefile.static_libs clean-static-libs
	rm -rf $(FIREBREATH_DIR)
	rm -rf CMakeCache.txt CMakeFiles/ cmake_install.cmake

# Cleans even more.
scour: clean
	$(MAKE_CMD) -f Makefile.static_libs scour-static-libs
